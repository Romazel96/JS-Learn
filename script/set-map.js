//MAP
// Map – это коллекция ключ/значение, как и Object.
// Но основное отличие в том, что Map позволяет использовать ключи любого типа.

let map = new Map([ // Создание новой коллекции
  ['key1', 'value1'],
  ['key2', 'value2'],
  ['key3', 'value3'],
  ['key4', 'value4']
])

console.log('--------------------------------')
map.set('key', 'value') // Записывает по ключу key значение value
map.get('key') // Возвращает значение по ключу
map.has('key') // Проверяет наличие ключа в коллекции
map.delete('key') // Удаляет элемент по ключу key
// map.clear() // Очищает коллекцию от всех элементов
map.size // Возвращает текущее количество элементов

console.log('--------------------------------')
map.set('1', 'str1'); // Строка в качестве ключа
map.set(1, 'num1'); // Цифра как ключ
map.set(true, 'bool1');  // Булево значение как ключ

console.log('--------------------------------')
console.log(map.get(1)); //  Вернет 'num1'
console.log(map.get('1')); // Вернет 'str1'
console.log(map.size); // Вернет 3

// Map может использовать объекты в качестве ключей.

console.log('--------------------------------')
// Перебор по ключам
for (let ke of map.keys()){
  console.log(ke)
}

console.log('--------------------------------')
// Перебор по значениям
for (let val of map.values()){
  console.log(val)
}

console.log('--------------------------------')
// Перебор по элементам в формате [ключ, значение]
for (let entry of map) { // то же самое, что и map.entries()
  console.log(entry);
}

console.log('--------------------------------')
map.forEach((value, key, map) => {
  console.log(`${key}: ${value}`)
})

console.log('--------------------------------')
// Создание объекта из map
let obj = Object.fromEntries(map)
console.log(obj)

console.log('--------------------------------------------------------------------------------------------------------------------------------')
//SET
// Объект Set – это коллекция со множеством уникальных значений (без ключей).

let set = new Set([ // Создание Set
  ['a', 'abc'],
  ['b', 'def'],
  ['c', 'ghk']
])

set.add(['d','abc1']) // Добавление значения
set.delete(['b', 'def']) // Удаление значения
set.has(['b', 'def']) // Проверяет наличие значения в коллекции
// set.clear() // Удаление всех значений
set.size // Вывод количества элементов в множестве

// При повторных вызовах set.add() с одинаковыми значениями ничего не происходит,
// за счёт этого как раз и получается, что каждое значение уникально.

set.forEach((value, valueAgain, set) => {
  console.log(value);
})

set.values() // Возвращает перебираемый объект для значений,
set.keys() // Аналогично set.values(), присутствует для обратной совместимости с Map,
set.entries() // Возвращает перебираемый объект для пар вида [значение, значение], присутствует для обратной совместимости с Map.

console.log(set)
